public class LinkedList {
	public Node head;

	
	public void addAlpha(String name){
		if(head == null){
			head = new Node(name);
		} else {
			Node insertAfter = findAlphaPosition(name);
			Node temp = insertAfter.next;
			
			Node toInsert = new Node(name);
			toInsert.next = temp;
			
			insertAfter.next = toInsert;
		}
	
	}
	
	public Node findAlphaPosition(String name){
		if(head == null){
			return head;
		} else {
			Node temp = head;
			while(
					temp.next != null &&
					temp.name.compareTo(name) < 1
			){
				if(temp.next.name.compareTo(name) > 1){
					return temp;
				}
				temp = temp.next;
			}
			
			return temp;
		}
	}
	
	public void addAtHead(String name){
		if(head == null){
			head = new Node(name);			
		} else {
			Node temp = new Node(name);
			temp.next = head;
			this.head = temp;
		}
	}
	
	public void addAtLast(String name){
		if(head == null){
			head = new Node(name);
		} else {
			Node last = findLastNode();
			last.next = new Node(name);
		}
	}
	
	public Node remove(){
		if(head == null){
			return null;
		} else {
			return head = head.next;
		}
	}
	
	
	public void print(){
		Node temp = head;
		System.out.println("");
		if(temp == null){
			System.out.println("Empty List. ");
		} else {	
			while(temp != null){
				System.out.println(temp.name + " ");
				temp = temp.next;
			}
		}
	}
	
	
	public Node findLastNode(){
		if(head == null){
			return head;
		} else {
			Node temp = head;
			while(temp.next != null){
				temp = temp.next;
			}
			return temp;
		}
	}
	
	
	
}
